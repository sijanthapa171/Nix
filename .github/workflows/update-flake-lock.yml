name: Update flake.lock

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0" # weekly

permissions:
  contents: write
  pull-requests: write

jobs:
  lockfile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v24
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      
      - name: Update nixpkgs input to unstable
        run: |
          sed -i 's|hydenix-nixpkgs.url = "github:nixos/nixpkgs/.*"|hydenix-nixpkgs.url = "github:nixos/nixpkgs/nixpkgs-unstable"|' flake.nix
      - name: Update flake.lock
        run: nix flake update
      - name: Update flake.nix with new rev
        run: |
          NEW_REV=$(jq -r '.nodes."hydenix-nixpkgs".locked.rev' flake.lock)
          if [ -n "$NEW_REV" ] && [ "$NEW_REV" != "null" ]; then
            sed -i 's|hydenix-nixpkgs.url = "github:nixos/nixpkgs/[^"]*"|hydenix-nixpkgs.url = "github:nixos/nixpkgs/'$NEW_REV'"|' flake.nix
          else
            echo "Failed to extract revision from flake.lock"
            exit 1
          fi
      - name: Verify flake.nix
        run: |
          grep -q "hydenix-nixpkgs.url" flake.nix || (echo "Failed to update flake.nix" && exit 1)
      
      - name: Check Root Flake
        id: check_root
        continue-on-error: true
        run: nix flake check

      - name: Check Template Flake
        id: check_template
        continue-on-error: true
        run: |
          cd template
          sed -i 's|url = "github:richen604/hydenix"|url = "path:../"|' flake.nix
          nix flake check
          git checkout flake.nix
          rm -f flake.lock
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "chore(deps): update flake.lock"
          title: "chore(deps): update flake.lock"
          branch: update-flake-lock-${{ github.run_id }}
          delete-branch: true
          body: |
            Updated flake.lock file.

            Root Flake check: ${{ steps.check_root.outcome == 'success' && '✅ Passed' || '❌ Failed' }}
            Template Flake check: ${{ steps.check_template.outcome == 'success' && '✅ Passed' || '❌ Failed' }}
            